#!/bin/sh


usage() {
    cat <<EOS
Usage: ... | ${SELF} [-h]

-h shows this help screen and exits

Encrypts STDIN content with password prompted and prints to STDOUT decoding command which also prompts password (should be same for proper decryption!).

Example:
    \$ cat secret.txt | ${SELF} | sh
EOS
}

SELF=$(basename "$0")
while getopts h O; do
    case "$O" in
    h) usage && exit 0;;
    *) usage && exit 1;;
    esac
done

# encodes STDIN, prompts for password, outputs decode command that prompts for password ...
[ -t 0 ] && echo "ERROR: empty STDIN" && usage && exit 2
OPENSSL_CMD="openssl enc -aes256 -pbkdf2 -a -A"; EOS="$(date -u +"---EOS.$$.%s---")"
${OPENSSL_CMD} | sed "1 i\\#!/bin/sh\ncat <<'${EOS}' | ${OPENSSL_CMD} -d" | sed "\$a${EOS}"
